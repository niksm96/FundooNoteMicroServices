package com.bridgelabz.fundoonotes.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RestController;

import com.bridgelabz.fundoonotes.model.Note;
import com.bridgelabz.fundoonotes.service.NoteService;

@RestController("/note")
public class NoteController {

	@Autowired
	private NoteService noteService;

	@PostMapping(value = "/createnote")
	public ResponseEntity<?> createNote(@RequestBody Note note,@RequestHeader(value = "token") String token, HttpServletRequest request) {
			try {
				if (noteService.create(note, token,request))
					return new ResponseEntity<String>("Note created successfully",HttpStatus.OK);
			} catch (Exception e) {
				e.printStackTrace();
				return new ResponseEntity<String>("Note creation failed",HttpStatus.CONFLICT);
			}
		return new ResponseEntity<String>("Note creation failed",HttpStatus.CONFLICT);
	}
	
	@GetMapping(value = "/retrieve")
	public ResponseEntity<?> retrieve(@RequestHeader(value = "token") String token, HttpServletRequest request){
		List<Note> notes = noteService.retrieve(token,request);
		if(notes.isEmpty())
			return new ResponseEntity<List<Note>>(notes, HttpStatus.FOUND);
		else
			return new ResponseEntity<String>("No notes to fetch", HttpStatus.NOT_FOUND);
	}
	
}
