package com.bridgelabz.fundoonotes.service;

import java.util.Optional;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bridgelabz.fundoonotes.model.User;
import com.bridgelabz.fundoonotes.repository.UserRepository;

@Service
public class UserServiceImpl implements UserService{
	
	@Autowired
	private UserRepository userRepository;

	@Override
	public boolean register(User user, HttpServletRequest request) {
		userRepository.save(user);
		Optional<User> existingUserId = userRepository.findById(user.getId());
		if(existingUserId.isPresent())
			return true;
		return false;
	}

	@Override
	public User login(User user, HttpServletRequest request, HttpServletResponse response) {
		User existingUser = userRepository.findByEmailId(user.getEmailId());
		return null;
	}

	@Override
	public User update(String token, User user, HttpServletRequest request) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean delete(String token, HttpServletRequest request) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public User activationStatus(String token, HttpServletRequest request) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean forgotPassword(String emailId, HttpServletRequest request) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public User resetPassword(User user, String token, HttpServletRequest request) {
		// TODO Auto-generated method stub
		return null;
	}

}
