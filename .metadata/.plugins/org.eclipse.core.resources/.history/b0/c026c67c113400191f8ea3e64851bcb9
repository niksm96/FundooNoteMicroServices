package com.bridgelabz.fundoonotes.service;

import java.util.Optional;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.bridgelabz.fundoonotes.model.User;
import com.bridgelabz.fundoonotes.repository.UserRepository;
import com.bridgelabz.fundoonotes.utility.TokenGenerator;

@Service
public class UserServiceImpl implements UserService {

	@Autowired
	private UserRepository userRepository;

	@Autowired
	private TokenGenerator tokenGenerator;

	@Autowired
	private PasswordEncoder bcryptEncoder;

	@Override
	public boolean register(User user, HttpServletRequest request) {
		String token;
		user.setPassword(bcryptEncoder.encode(user.getPassword()));
		User newUser=userRepository.save(user);
		Optional<User> existingUserId = userRepository.findById(user.getId());
		if (newUser!=null) {
			token = tokenGenerator.generateToken(String.valueOf(existingUserId.get().getId()));
//			StringBuffer requestUrl = request.getRequestURL();
//			String activationUrl = requestUrl.substring(0, requestUrl.lastIndexOf("/"));
//			activationUrl = activationUrl + "/activationstatus/" + token;
//			emailSender.sendEmail("", "", activationUrl);
			return true;
		}
		return false;
	}

	@Override
	public User login(User user, HttpServletRequest request, HttpServletResponse response) {
		User existingUser = userRepository.findByEmailId(user.getEmailId());
		String token = null;
		boolean isMatch;
		if (existingUser != null) {
			isMatch = bcryptEncoder.matches(user.getPassword(), existingUser.getPassword());
			if (isMatch) {
				token = tokenGenerator.generateToken(String.valueOf(existingUser.getId()));
				response.setHeader("token", token);
			}
		}
		return existingUser;
	}

	@Override
	public User update(String token, User user, HttpServletRequest request) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean delete(String token, HttpServletRequest request) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public User activationStatus(String token, HttpServletRequest request) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean forgotPassword(String emailId, HttpServletRequest request) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public User resetPassword(User user, String token, HttpServletRequest request) {
		// TODO Auto-generated method stub
		return null;
	}

}
